{"version":3,"sources":["components/expense_row.js","components/expense_table.js","components/budget_card.js","components/enter_expense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseRow","id","items","date","amount","category","note","map","item","idx","ExpenseTable","expenses","setSpentPerCategory","useEffect","amounts_spent","forEach","expense","hasOwnProperty","calculateCurrentExpenditures","className","scope","BudgetCard","budget_amount","current_amount","EnterExpense","addExpense","categories","today","Date","toISOString","slice","indexOf","useState","setDate","setNote","setCategory","setAmount","goodLabelStyle","badLabelStyle","goodInputStyle","badInputStyle","dateLabelStyle","setDateLabelStyle","dateInputStyle","setDateInputStyle","amountLabelStyle","setAmountLabelStyle","amountInputStyle","setAmountInputStyle","noteLabelStyle","setNoteLabelStyle","noteInputStyle","setNoteInputStyle","categoryLabelStyle","setCategoryLabelStyle","categorySelectStyle","setCategorySelectStyle","categoriesOptions","length","i","value","name","handleChange","data","e","target","alert","onSubmit","preventDefault","okay","float_amount","Number","htmlFor","type","onChange","pattern","placeholder","selected","base","require","apiKey","process","App","setExpenses","setCategories","spentPerCategory","a","list_records","select","view","eachPage","records","fetchNextPage","record","push","fields","err","console","error","log","get","create","getId","get_transactions_from_airtable","get_categories_from_airtable","post_new_transaction_to_airtable","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAYeA,EAZI,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAChBC,EAAQ,CAD+C,EAAnCC,KAAmC,EAA7BC,OAA6B,EAArBC,SAAqB,EAAXC,MAGhD,OACE,oBAAIL,GAAIA,EAAR,SACGC,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACT,6BAAeD,GAANC,SC2CFC,EA9CM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,oBAkBhC,OAJAC,qBAAU,YAb2B,WACnC,IAAIC,EAAgB,GACpBH,EAASI,SAAQ,SAACC,GACZF,EAAcG,eAAeD,EAAQX,UACvCS,EAAcE,EAAQX,WAAaW,EAAQZ,OAE3CU,EAAcE,EAAQX,UAAYW,EAAQZ,UAI9CQ,EAAoBE,GAIpBI,MAIA,qBAAKC,UAAU,mBAAf,SACE,wBAAOA,UAAU,+CAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,uBAGJ,gCACGT,EAASJ,KAAI,SAACS,EAASP,GAAV,OACZ,cAAC,EAAD,CACER,GAAIQ,EAEJN,KAAMa,EAAQb,KACdC,OAAQY,EAAQZ,OAChBC,SAAUW,EAAQX,SAClBC,KAAMU,EAAQV,MAJTG,cCpBJY,EAhBI,SAAC,GAAiD,IAA/ChB,EAA8C,EAA9CA,SAAUiB,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAE7C,OACE,sBAAKJ,UAAU,sBAAf,UACE,qBAAKA,UAAU,YAAf,eACA,oBAAIA,UAAU,aAAd,SAA4Bd,IAC5B,qBAAIc,UAAU,gCAAd,sBACYG,KAEZ,oBAAGH,UAAU,aAAb,qBAC6B,MAAlBI,EAAyB,EAAIA,SC2L/BC,EAnMM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC9BC,GAAQ,IAAIC,MAAOC,cACvBF,EAAQA,EAAMG,MAAM,EAAGH,EAAMI,QAAQ,MACrC,MAAwBC,mBAASL,GAAjC,mBAAOxB,EAAP,KAAa8B,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAO1B,EAAP,KAAa4B,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAO3B,EAAP,KAAiB8B,EAAjB,KACA,EAA4BH,mBAAS,IAArC,mBAAO5B,EAAP,KAAegC,EAAf,KAEMC,EAAiB,OACjBC,EAAgB,mBAChBC,EAAiB,OACjBC,EAAgB,+BAEtB,EAA4CR,mBAASK,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA4CV,mBAASO,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAAgDZ,mBAASK,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KACA,EAAgDd,mBAASO,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KACA,EAA4ChB,mBAASK,GAArD,mBAAOY,EAAP,KAAuBC,EAAvB,KACA,EAA4ClB,mBAASO,GAArD,mBAAOY,EAAP,KAAuBC,EAAvB,KACA,EAAoDpB,mBAASK,GAA7D,mBAAOgB,EAAP,KAA2BC,GAA3B,KACA,GACEtB,mBAASO,GADX,qBAAOgB,GAAP,MAA4BC,GAA5B,MAGIC,GACF/B,EAAWgC,OAAS,GACpBhC,EAAWnB,KAAI,SAACC,EAAMmD,GACpB,OACE,wBAAgBC,MAAOpD,EAAKqD,KAA5B,SACGrD,EAAKqD,MADKF,K,WAqEbG,GAAe,SAACC,GAAD,OAAU,SAACC,GAC9B,OAAQD,GACN,IAAK,SACH3B,EAAU4B,EAAEC,OAAOL,OACnB,MACF,IAAK,WACHzB,EAAY6B,EAAEC,OAAOL,OACrB,MACF,IAAK,OACH1B,EAAQ8B,EAAEC,OAAOL,OACjB,MACF,IAAK,OACH,IAAIjC,GAAQ,IAAIC,MAAOC,cAEvB,GADAF,EAAQA,EAAMG,MAAM,EAAGH,EAAMI,QAAQ,MACjCiC,EAAEC,OAAOL,MAAQjC,EAGnB,OAFAuC,MAAM,8CACNjC,EAAQ,IAGVA,EAAQ+B,EAAEC,OAAOL,OACjB,MACF,QACEM,MAAM,oBAAD,OAAqBH,EAArB,8CAKX,OACE,qBAAK5C,UAAU,sBAAf,SACE,uBAAMgD,SA5FW,SAACH,GACpBA,EAAEI,iBACF,IAAIC,GAAO,EAwCX,GAtCe,KAAXjE,GAA4B,IAAXA,GACnB0C,EAAoBR,GACpBU,EAAoBR,GACpB6B,GAAO,IAEPvB,EAAoBT,GACpBW,EAAoBT,IAGT,KAATjC,GACF4C,EAAkBZ,GAClBc,EAAkBZ,GAClB6B,GAAO,IAEPnB,EAAkBb,GAClBe,EAAkBb,IAIH,KAAblC,GACFiD,GAAsBhB,GACtBkB,GAAuBhB,GACvB6B,GAAO,IAEPf,GAAsBjB,GACtBmB,GAAuBjB,IAIZ,KAATpC,GACFuC,EAAkBJ,GAClBM,EAAkBJ,GAClB6B,GAAO,IAEP3B,EAAkBL,GAClBO,EAAkBL,IAGhB8B,EACF,IACE,IAAI1C,GAAQ,IAAIC,MAAOC,cACvBF,EAAQA,EAAMG,MAAM,EAAGH,EAAMI,QAAQ,MACrC,IAAIuC,EAAeC,OAAOnE,GAC1BqB,EAAW,CACTtB,KAAMA,EACNC,OAAQkE,EACRjE,SAAUA,EACVC,KAAMA,IAER2B,EAAQN,GACRO,EAAQ,IACRC,EAAY,IACZC,EAAU,IACV,MAAO4B,GACPE,MAAM,oDAkCR,UACE,sBAAK/C,UAAU,aAAf,UACE,uBAAOA,UAAWsB,EAAgB+B,QAAQ,YAA1C,kBAGA,uBACEC,KAAK,OACLtD,UAAWwB,EACXiB,MAAOzD,EACPuE,SAAUZ,GAAa,aAG3B,sBAAK3C,UAAU,aAAf,UACE,uBAAOA,UAAW0B,EAAkB2B,QAAQ,cAA5C,oBAGA,uBACEC,KAAK,SACLtD,UAAW4B,EACXa,MAAOxD,EACPsE,SAAUZ,GAAa,UACvBa,QAAQ,OACR1E,GAAG,cACH,mBAAiB,aACjB2E,YAAY,yBAEd,uBAAO3E,GAAG,aAAakB,UAAU,uBAAjC,qCAIF,sBAAKA,UAAU,aAAf,UACE,uBAAOA,UAAWkC,EAAoBmB,QAAQ,iBAA9C,sBAGA,yBACErD,UAAWoC,GACXK,MAAOvD,EACPqE,SAAUZ,GAAa,YAHzB,UAKE,wBAAQe,UAAQ,EAACjB,MAAM,GAAvB,uBAGCH,SAGL,sBAAKtC,UAAU,aAAf,UACE,uBAAOA,UAAW8B,EAAgBuB,QAAQ,YAA1C,kBAGA,uBACEC,KAAK,OACLb,MAAOtD,EACPoE,SAAUZ,GAAa,QACvB3C,UAAWgC,EACXlD,GAAG,YACH,mBAAiB,WACjB2E,YAAY,2BAEd,uBAAO3E,GAAG,WAAWkB,UAAU,uBAA/B,sEAIF,wBAAQsD,KAAK,SAAStD,UAAU,kBAAhC,0BCrLJ2D,EAAO,IAFIC,EAAQ,IAEZ,CAAa,CAAEC,OADVC,sBAC6BH,KAAK,qBAuInCI,MArIf,WACE,MAAgClD,mBAAS,IAAzC,mBAAOrB,EAAP,KAAiBwE,EAAjB,KACA,EAAoCnD,mBAAS,IAA7C,mBAAON,EAAP,KAAmB0D,EAAnB,KACA,EAAgDpD,mBAAS,IAAzD,mBAAOqD,EAAP,KAAyBzE,EAAzB,KAHa,4CAsBb,4BAAA0E,EAAA,sDACMC,EAAe,GACnBT,EAAK,gBACFU,OAAO,CACNC,KAAM,cAEPC,UACC,SAAcC,EAASC,GAGrBD,EAAQ5E,SAAQ,SAAU8E,GACxBN,EAAaO,KAAKD,EAAOE,WAM3BH,OAEF,SAAcI,GACRA,EACFC,QAAQC,MAAMF,GAGdb,EAAYI,MAxBtB,4CAtBa,kEAqDb,4BAAAD,EAAA,sDACMC,EAAe,GACnBT,EAAK,oBACFU,OAAO,CACNC,KAAM,YACNM,OAAQ,CAAC,OAAQ,YAElBL,UACC,SAAcC,EAASC,GAGrBD,EAAQ5E,SAAQ,SAAU8E,GACxBI,QAAQE,IAAI,sBAAuBN,EAAOO,IAAI,SAC9Cb,EAAaO,KAAKD,EAAOE,WAM3BH,OAEF,SAAcI,GACRA,EACFC,QAAQC,MAAMF,GAGdZ,EAAcG,MA1BxB,4CArDa,kEAsFb,WAAgDvE,GAAhD,SAAAsE,EAAA,sDACER,EAAK,gBAAgBuB,OAAO,CAAC,CAAEN,OAAQ/E,KAAY,SAAUgF,EAAKL,GAC5DK,EACF9B,MAAM,qCAAD,OAAsClD,EAAtC,MAGP2E,EAAQ5E,SAAQ,SAAU8E,GACxBI,QAAQE,IAAIN,EAAOS,eAPzB,4CAtFa,sBAuGb,OALAzF,qBAAU,YAlGG,mCAmGX0F,GAnGW,mCAoGXC,KACC,IAGD,sBAAKrF,UAAU,oBAAf,UACE,gDACA,cAAC,EAAD,CAAcM,WArGC,SAACT,GAEhBA,EAAQC,eAAe,SACvBD,EAAQC,eAAe,WACvBD,EAAQC,eAAe,aACvBD,EAAQC,eAAe,SAGvBkE,EAAY,GAAD,mBAAKxE,GAAL,CAAeK,KAbjB,oCAcTyF,CAAiCzF,IAEjCkD,MACE,mHAyFoCxC,WAAYA,IAElD,sBAAKgF,MAAM,kBAAX,UACE,oDACA,qBAAKA,MAAM,wDAAX,SACGhF,EAAWnB,KAAI,SAACF,EAAUI,GAAX,OACd,qBAAKU,UAAU,QAAf,SACE,cAAC,EAAD,CACEd,SAAUA,EAASwD,KACnBvC,cAAejB,EAASD,OACxBU,cAAeuE,EAAiBhF,EAASwD,kBAMnD,sBAAK1C,UAAU,oBAAf,UACE,0CACA,cAAC,EAAD,CACER,SAAUA,EACVC,oBAAqBA,WC5HhB+F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2d1aa84e.chunk.js","sourcesContent":["const ExpenseRow = ({ id, date, amount, category, note }) => {\r\n  let items = [date, amount, category, note];\r\n\r\n  return (\r\n    <tr id={id}>\r\n      {items.map((item, idx) => (\r\n        <td key={idx}>{item}</td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ExpenseRow;\r\n","import ExpenseRow from \"./expense_row\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ExpenseTable = ({ expenses, setSpentPerCategory }) => {\r\n  const calculateCurrentExpenditures = () => {\r\n    let amounts_spent = {};\r\n    expenses.forEach((expense) => {\r\n      if (amounts_spent.hasOwnProperty(expense.category)) {\r\n        amounts_spent[expense.category] += expense.amount;\r\n      } else {\r\n        amounts_spent[expense.category] = expense.amount;\r\n      }\r\n    });\r\n    debugger;\r\n    setSpentPerCategory(amounts_spent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateCurrentExpenditures();\r\n  });\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-striped table-hover align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Amount ($)</th>\r\n            <th scope=\"col\">Category</th>\r\n            <th scope=\"col\">Note</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.map((expense, idx) => (\r\n            <ExpenseRow\r\n              id={idx}\r\n              key={idx}\r\n              date={expense.date}\r\n              amount={expense.amount}\r\n              category={expense.category}\r\n              note={expense.note}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseTable;\r\n","const BudgetCard = ({ category, budget_amount, current_amount }) => {\r\n  debugger;\r\n  return (\r\n    <div className=\"card card-block p-2\">\r\n      <div className=\"card-body\"> </div>\r\n      <h5 className=\"card-title\">{category}</h5>\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">\r\n        Budget: ${budget_amount}\r\n      </h6>\r\n      <p className=\"card-text \">\r\n        Spent: ${current_amount == null ? 0 : current_amount}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetCard;\r\n","import { useState } from \"react\";\r\n\r\nconst EnterExpense = ({ addExpense, categories }) => {\r\n  var today = new Date().toISOString();\r\n  today = today.slice(0, today.indexOf(\"T\"));\r\n  const [date, setDate] = useState(today);\r\n  const [note, setNote] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const goodLabelStyle = \"mr-3\";\r\n  const badLabelStyle = \"mr-3 text-danger\";\r\n  const goodInputStyle = \"my-1\";\r\n  const badInputStyle = \"my-1 form-control is-invalid\";\r\n\r\n  const [dateLabelStyle, setDateLabelStyle] = useState(goodLabelStyle);\r\n  const [dateInputStyle, setDateInputStyle] = useState(goodInputStyle);\r\n  const [amountLabelStyle, setAmountLabelStyle] = useState(goodLabelStyle);\r\n  const [amountInputStyle, setAmountInputStyle] = useState(goodInputStyle);\r\n  const [noteLabelStyle, setNoteLabelStyle] = useState(goodLabelStyle);\r\n  const [noteInputStyle, setNoteInputStyle] = useState(goodInputStyle);\r\n  const [categoryLabelStyle, setCategoryLabelStyle] = useState(goodLabelStyle);\r\n  const [categorySelectStyle, setCategorySelectStyle] =\r\n    useState(goodInputStyle);\r\n\r\n  let categoriesOptions =\r\n    categories.length > 0 &&\r\n    categories.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.name}>\r\n          {item.name}\r\n        </option>\r\n      );\r\n    }, this);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let okay = true;\r\n    // setting amount label and input to okay or error\r\n    if (amount === \"\" || amount === 0) {\r\n      setAmountLabelStyle(badLabelStyle);\r\n      setAmountInputStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setAmountLabelStyle(goodLabelStyle);\r\n      setAmountInputStyle(goodInputStyle);\r\n    }\r\n    // setting note label and input to okay or error\r\n    if (note === \"\") {\r\n      setNoteLabelStyle(badLabelStyle);\r\n      setNoteInputStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setNoteLabelStyle(goodLabelStyle);\r\n      setNoteInputStyle(goodInputStyle);\r\n    }\r\n    // setting category label and input to okay or error\r\n    debugger;\r\n    if (category === \"\") {\r\n      setCategoryLabelStyle(badLabelStyle);\r\n      setCategorySelectStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setCategoryLabelStyle(goodLabelStyle);\r\n      setCategorySelectStyle(goodInputStyle);\r\n    }\r\n    // setting date label and input to okay or error\r\n    debugger;\r\n    if (date === \"\") {\r\n      setDateLabelStyle(badLabelStyle);\r\n      setDateInputStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setDateLabelStyle(goodLabelStyle);\r\n      setDateInputStyle(goodInputStyle);\r\n    }\r\n\r\n    if (okay) {\r\n      try {\r\n        var today = new Date().toISOString();\r\n        today = today.slice(0, today.indexOf(\"T\"));\r\n        let float_amount = Number(amount);\r\n        addExpense({\r\n          date: date,\r\n          amount: float_amount,\r\n          category: category,\r\n          note: note,\r\n        });\r\n        setDate(today);\r\n        setNote(\"\");\r\n        setCategory(\"\");\r\n        setAmount(\"\");\r\n      } catch (e) {\r\n        alert(\"Bad number conversion of amount to Number type\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (data) => (e) => {\r\n    switch (data) {\r\n      case \"amount\":\r\n        setAmount(e.target.value);\r\n        break;\r\n      case \"category\":\r\n        setCategory(e.target.value);\r\n        break;\r\n      case \"note\":\r\n        setNote(e.target.value);\r\n        break;\r\n      case \"date\":\r\n        var today = new Date().toISOString();\r\n        today = today.slice(0, today.indexOf(\"T\"));\r\n        if (e.target.value > today) {\r\n          alert(\"Cannot have an expense in the future.\");\r\n          setDate(\"\");\r\n          return;\r\n        }\r\n        setDate(e.target.value);\r\n        break;\r\n      default:\r\n        alert(`An unknown data: ${data} was passed into the switch statement.`);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid m-4\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label className={dateLabelStyle} htmlFor=\"dateinput\">\r\n            Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            className={dateInputStyle}\r\n            value={date}\r\n            onChange={handleChange(\"date\")}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className={amountLabelStyle} htmlFor=\"amountinput\">\r\n            Amount\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className={amountInputStyle}\r\n            value={amount}\r\n            onChange={handleChange(\"amount\")}\r\n            pattern=\"\\d*\"\r\n            id=\"amountinput\"\r\n            aria-describedby=\"amountHelp\"\r\n            placeholder=\"Enter Expense Amount\"\r\n          />\r\n          <small id=\"amountHelp\" className=\"form-text text-muted\">\r\n            Remember the change!\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className={categoryLabelStyle} htmlFor=\"categorySelect\">\r\n            Category\r\n          </label>\r\n          <select\r\n            className={categorySelectStyle}\r\n            value={category}\r\n            onChange={handleChange(\"category\")}\r\n          >\r\n            <option selected value=\"\">\r\n              Choose...\r\n            </option>\r\n            {categoriesOptions}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className={noteLabelStyle} htmlFor=\"noteInput\">\r\n            Note\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={note}\r\n            onChange={handleChange(\"note\")}\r\n            className={noteInputStyle}\r\n            id=\"noteInput\"\r\n            aria-describedby=\"noteHelp\"\r\n            placeholder=\"And it came to pass...\"\r\n          />\r\n          <small id=\"noteHelp\" className=\"form-text text-muted\">\r\n            Add the store name or other details to remember this.\r\n          </small>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterExpense;\r\n","import \"./App.css\";\nimport ExpenseTable from \"./components/expense_table\";\nimport Login from \"./components/login\";\nimport BudgetCard from \"./components/budget_card\";\nimport EnterExpense from \"./components/enter_expense\";\nimport { useState, useEffect } from \"react\";\nvar Airtable = require(\"airtable\");\nconst api_key = process.env.REACT_APP_API_KEY;\nvar base = new Airtable({ apiKey: api_key }).base(\"app5VP16VBp5NgMg5\");\n\nfunction App() {\n  const [expenses, setExpenses] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [spentPerCategory, setSpentPerCategory] = useState({});\n\n  const addExpense = (expense) => {\n    if (\n      expense.hasOwnProperty(\"date\") &&\n      expense.hasOwnProperty(\"amount\") &&\n      expense.hasOwnProperty(\"category\") &&\n      expense.hasOwnProperty(\"note\")\n    ) {\n      // the setExpenses triggers rerender and will fetch the new data from airTable.\n      setExpenses([...expenses, expense]);\n      post_new_transaction_to_airtable(expense);\n    } else {\n      alert(\n        \"The expense object made did not have the following props: date, amount, category, note. \\n Failed to set state\"\n      );\n    }\n  };\n\n  async function get_transactions_from_airtable() {\n    let list_records = [];\n    base(\"Transactions\")\n      .select({\n        view: \"Grid view\",\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          // This function (`page`) will get called for each page of records.\n\n          records.forEach(function (record) {\n            list_records.push(record.fields);\n          });\n\n          // To fetch the next page of records, call `fetchNextPage`.\n          // If there are more records, `page` will get called again.\n          // If there are no more records, `done` will get called.\n          fetchNextPage();\n        },\n        function done(err) {\n          if (err) {\n            console.error(err);\n            return;\n          } else {\n            setExpenses(list_records);\n          }\n        }\n      );\n  }\n\n  // gets the budget categories from airtable\n  async function get_categories_from_airtable() {\n    let list_records = [];\n    base(\"Category_Budgets\")\n      .select({\n        view: \"Grid view\",\n        fields: [\"name\", \"amount\"],\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          // This function (`page`) will get called for each page of records.\n\n          records.forEach(function (record) {\n            console.log(\"Retrieved category:\", record.get(\"Name\"));\n            list_records.push(record.fields);\n          });\n\n          // To fetch the next page of records, call `fetchNextPage`.\n          // If there are more records, `page` will get called again.\n          // If there are no more records, `done` will get called.\n          fetchNextPage();\n        },\n        function done(err) {\n          if (err) {\n            console.error(err);\n            return;\n          } else {\n            setCategories(list_records);\n          }\n        }\n      );\n  }\n\n  // creates new transaction to airtable\n  async function post_new_transaction_to_airtable(expense) {\n    base(\"Transactions\").create([{ fields: expense }], function (err, records) {\n      if (err) {\n        alert(`Error posting Expense to Airtable ${expense}.`);\n        return;\n      }\n      records.forEach(function (record) {\n        console.log(record.getId());\n      });\n    });\n  }\n\n  useEffect(() => {\n    get_transactions_from_airtable();\n    get_categories_from_airtable();\n  }, []);\n\n  return (\n    <div className=\"container m-4 p-4\">\n      <h1>Budget Tracker</h1>\n      <EnterExpense addExpense={addExpense} categories={categories} />\n      {/* <Login /> */}\n      <div class=\"container-fluid\">\n        <h2>Current Categories</h2>\n        <div class=\"row d-flex flex-row flex-nowrap overflow-auto p-3 m-3\">\n          {categories.map((category, idx) => (\n            <div className=\"col-3\">\n              <BudgetCard\n                category={category.name}\n                budget_amount={category.amount}\n                amounts_spent={spentPerCategory[category.name]}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"container m-3 p-3\">\n        <h2>Expenses</h2>\n        <ExpenseTable\n          expenses={expenses}\n          setSpentPerCategory={setSpentPerCategory}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
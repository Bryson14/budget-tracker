{"version":3,"sources":["components/expense_row.js","components/expense_table.js","components/budget_card.js","components/enter_expense.js","components/login.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseRow","id","date","amount","category","note","airtableId","removeTransaction","useState","showAlert","setShowAlert","date_obj","Date","items","String","getMonth","getUTCDate","toFixed","onClick","alert","type","className","map","item","idx","ExpenseTable","expenses","tableVisible","visibilityStyle","visibility","overflow","style","scope","expense","airtable_id","BudgetCard","budget_amount","amount_remaining","category_transactions","left_to_spend","spent","aggregate_budget","percentage_month_completed","card_style_class","message","Math","round","s","length","i","forEach","trans","day_month_date","EnterExpense","addExpense","categories","category_amount_remaining","today","toISOString","slice","indexOf","setDate","setNote","setCategory","setAmount","goodLabelStyle","badLabelStyle","goodInputStyle","badInputStyle","dateLabelStyle","setDateLabelStyle","dateInputStyle","setDateInputStyle","amountLabelStyle","setAmountLabelStyle","amountInputStyle","setAmountInputStyle","noteLabelStyle","setNoteLabelStyle","noteInputStyle","setNoteInputStyle","categoryLabelStyle","setCategoryLabelStyle","categorySelectStyle","setCategorySelectStyle","categoriesOptions","name","padEnd","value","decimal_re","RegExp","handleChange","data","e","target","startsWith","test","onSubmit","preventDefault","okay","float_amount","Number","htmlFor","onChange","inputmode","pattern","placeholder","Login","setApiKey","password","setPassword","specialCharacters","Set","split","capitalLetters","numbers","crypto","require","specials","capitals","nums","has","charAt","process","createHmac","update","digest","decipherkey","createDecipher","encrypted_api_key","api_key","final","localStorage","setItem","Airtable","base","App","getItem","apiKey","setExpenses","setCategories","setTableVisible","get_transactions_from_airtable","a","list_records","select","view","eachPage","records","fetchNextPage","record","fields","push","err","console","error","destroy","deletedRecords","create","useEffect","get_categories_from_airtable","actual_budget_spent","total_spent","total_budget","hasOwnProperty","name_index_category_dict","amount_left","time","getTime","setMonth","days","getDate","days_in_month","todays_budget","post_new_transaction_to_airtable","filter","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6kBAyEeA,EAvEI,SAAC,GAQb,IAPLC,EAOI,EAPJA,GACAC,EAMI,EANJA,KACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,kBAEA,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,IAAIC,KAAKV,GAGpBW,EAAQ,CADZC,OAAOH,EAASI,WAAa,GAAK,IAAMD,OAAOH,EAASK,cAC3Bb,EAAOc,QAAQ,GAAIb,EAAUC,GAE5D,OAAII,EAEA,+BACE,6BAAKI,EAAM,KACX,6BAAKA,EAAM,KACX,yCACA,6BACE,wBACEK,QAAS,WACW,MAAdZ,EACFa,MAAM,0BAENZ,EAAkBD,GAClBI,GAAa,KAGjBU,KAAK,SACLC,UAAU,iBAVZ,sBAeF,6BACE,wBACEH,QAAS,WACPR,GAAa,IAEfU,KAAK,SACLC,UAAU,kBALZ,yBAcJ,qBAAIpB,GAAIA,EAAR,UACGY,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACT,6BAAeD,GAANC,MAEX,oBACEN,QAAS,WACPR,GAAa,IAFjB,SAKE,wBAAQU,KAAK,SAASC,UAAU,oBAAhC,qBC1BKI,EApCM,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,aAAcpB,EAAwB,EAAxBA,kBAC1CqB,EAAkB,CACpBC,WAA4B,MAAhBF,GAAyBA,EAA0B,UAAX,SACpDG,SAAU,UAEZ,OACE,wBACEC,MAAOH,EACPP,UAAU,wEAFZ,UAIE,gCACE,+BACE,oBAAIW,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,uBAGJ,gCACGN,EAASJ,KAAI,SAACW,EAAST,GAAV,OACZ,cAAC,EAAD,CACEvB,GAAIuB,EAEJtB,KAAM+B,EAAQ/B,KACdC,OAAQ8B,EAAQ9B,OAChBC,SAAU6B,EAAQ7B,SAClBC,KAAM4B,EAAQ5B,KACdC,WAAY2B,EAAQC,YACpB3B,kBAAmBA,GANdiB,YC6DFW,EArFI,SAAC,GAMb,IALL/B,EAKI,EALJA,SACAgC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,sBAKAF,EAAiC,MAAjBA,EAAwBA,EAAgB,EAIxD,IAAIG,GAHJF,EACsB,MAApBA,EAA2BA,EAAmBD,GAET,EAAIC,EAAmB,EAC1DG,EAAQJ,EAAgBC,EACxBI,EATA,EADJC,2BAUoDN,EAEhDO,EAAmB,gCAEnBC,EAAO,eAAWC,KAAKC,MAAe,IAARN,EAAeJ,GAAtC,WAEW,IAAlBA,GAEFO,GAAoB,0BACpBC,EAAU,cACDJ,EAAQ,GAEjBG,GAAoB,sBACpBC,EAAU,sBAGVD,GAFSH,EAAQJ,EAAgB,EAEb,sCACXI,GAASC,EAEE,oCAEA,8BA0BtB,OACE,mCACE,qBAAKpB,UAAU,gCAAf,SACE,sBAAKA,UAAWsB,EAAkBzB,QA1BtB,WAChB,IAAI6B,EAAC,qBACHT,EAAsBU,OAAS,EAAI,IAAM,GADtC,gBAEG5C,GACR2C,GAAK,KAGL,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IACtBF,GAAK,IAEPA,GAAK,OACLT,EAAsBY,SAAQ,SAACC,GAC7B,IAAMxC,EAAW,IAAIC,KAAKuC,EAAMjD,MAC1BkD,EACJtC,OAAOH,EAASI,WAAa,GAAK,IAAMD,OAAOH,EAASK,cAC1D+B,GAAC,UAAOK,EAAP,eAA4BD,EAAMhD,OAAlC,cAA8CgD,EAAM9C,KAApD,SAGkC,IAAjCiC,EAAsBU,SACxBD,EAAC,6BAAyB3C,EAAzB,iBAEHe,MAAM4B,IAKF,UACE,oBAAI1B,UAAU,kBAAd,SAAiCjB,IACjC,sBAAKiB,UAAU,sBAAf,UACE,oBAAGA,UAAU,qBAAb,yBACekB,EAActB,QAAQ,MAErC,qBAAII,UAAU,YAAd,sBAAoCe,KACpC,qBAAIf,UAAU,YAAd,+BACqBoB,EAAmBD,GAAOvB,QAAQ,MAEvD,qBAAII,UAAU,YAAd,oBACUmB,EAAMvB,QAAQ,GADxB,IAC6B2B,EAAO,UAAMA,GAAY,iBC6JnDS,EAvOM,SAAC,GAIf,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,0BAEIC,GAAQ,IAAI7C,MAAO8C,cACvBD,EAAQA,EAAME,MAAM,EAAGF,EAAMG,QAAQ,MACrC,MAAwBpD,mBAASiD,GAAjC,mBAAOvD,EAAP,KAAa2D,EAAb,KACA,EAAwBrD,mBAAS,IAAjC,mBAAOH,EAAP,KAAayD,EAAb,KACA,EAAgCtD,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiB2D,EAAjB,KACA,EAA4BvD,mBAAS,IAArC,mBAAOL,EAAP,KAAe6D,EAAf,KAEMC,EAAiB,qCACjBC,EAAgB,iDAChBC,EAAiB,eACjBC,EAAgB,0BAEtB,EAA4C5D,mBAASyD,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA4C9D,mBAAS2D,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAAgDhE,mBAASyD,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KACA,EAAgDlE,mBAAS2D,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KACA,EAA4CpE,mBAASyD,GAArD,mBAAOY,EAAP,KAAuBC,EAAvB,KACA,EAA4CtE,mBAAS2D,GAArD,mBAAOY,EAAP,KAAuBC,EAAvB,KACA,EAAoDxE,mBAASyD,GAA7D,mBAAOgB,GAAP,KAA2BC,GAA3B,KACA,GACE1E,mBAAS2D,GADX,qBAAOgB,GAAP,MAA4BC,GAA5B,MAGIC,GACF9B,EAAWP,OAAS,GACpBO,EAAWjC,KAAI,SAACC,EAAM0B,GACpB,IAAIV,EAAgB,GAWpB,OAJEA,EALwC,MAAxCiB,EAA0BjC,EAAK+D,OAC/B9B,EAA0BjC,EAAK+D,MAAQ,GAEvC/C,EACE,IAAMzB,OAAO+B,KAAKC,MAAMU,EAA0BjC,EAAK+D,SAC3BC,OAAO,GAAK,KAE1B,KAAKA,OAAO,GAAK,KAGjC,yBAAgBC,MAAOjE,EAAK+D,KAA5B,UACG/C,EACAhB,EAAK+D,OAFKrC,K,WAqEfwC,GAAa,IAAIC,OAAO,yCAEtBC,GAAe,SAACC,GAAD,OAAU,SAACC,GAC9B,OAAQD,GACN,IAAK,SACH,IAAIE,EAASD,EAAEC,OAAON,MAGlBM,EAAOC,WAAW,QACpBD,EAAS,IAAMA,EAAOnC,MAAM,IAI5B8B,GAAWO,KAAKF,IACL,MAAXA,GACW,MAAXA,GACW,KAAXA,GACW,OAAXA,EAEA9B,EAAU8B,GAEV3E,MAAM,kBAER,MACF,IAAK,WACH4C,EAAY8B,EAAEC,OAAON,OACrB,MACF,IAAK,OACH1B,EAAQ+B,EAAEC,OAAON,OACjB,MACF,IAAK,OACH,IAAI/B,GAAQ,IAAI7C,MAAO8C,cAEvB,GADAD,EAAQA,EAAME,MAAM,EAAGF,EAAMG,QAAQ,MACjCiC,EAAEC,OAAON,MAAQ/B,EAAQ,EAG3B,OAFAtC,MAAM,mEACN0C,EAAQJ,GAGVI,EAAQgC,EAAEC,OAAON,OACjB,MACF,QACErE,MAAM,oBAAD,OAAqByE,EAArB,8CAKX,OACE,uBAAMK,SA7Ga,SAACJ,GACpBA,EAAEK,iBACF,IAAIC,GAAO,EAsCX,GApCe,KAAXhG,GAA4B,IAAXA,GACnBuE,EAAoBR,GACpBU,EAAoBR,GACpB+B,GAAO,IAEPzB,EAAoBT,GACpBW,EAAoBT,IAGT,KAAT9D,GACFyE,EAAkBZ,GAClBc,EAAkBZ,GAClB+B,GAAO,IAEPrB,EAAkBb,GAClBe,EAAkBb,IAGH,KAAb/D,GACF8E,GAAsBhB,GACtBkB,GAAuBhB,GACvB+B,GAAO,IAEPjB,GAAsBjB,GACtBmB,GAAuBjB,IAGZ,KAATjE,GACFoE,EAAkBJ,GAClBM,EAAkBJ,GAClB+B,GAAO,IAEP7B,EAAkBL,GAClBO,EAAkBL,IAGhBgC,EACF,IACE,IAAI1C,GAAQ,IAAI7C,MAAO8C,cACvBD,EAAQA,EAAME,MAAM,EAAGF,EAAMG,QAAQ,MACrC,IAAIwC,EAAeC,OAAOlG,GAC1BmD,EAAW,CACTpD,KAAMA,EACNC,OAAQiG,EACRhG,SAAUA,EACVC,KAAMA,IAERwD,EAAQJ,GACRK,EAAQ,IACRC,EAAY,IACZC,EAAU,IACV,MAAO6B,GACP1E,MAAM,oDAqDoBE,UAAU,OAAxC,UACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOA,UAAWgD,EAAgBiC,QAAQ,YAA1C,kBAGA,qBAAKjF,UAAU,WAAf,SACE,uBACED,KAAK,OACLC,UAAWkD,EACXiB,MAAOtF,EACPqG,SAAUZ,GAAa,eAI7B,sBAAKtE,UAAU,iBAAf,UACE,uBAAOA,UAAWoD,EAAkB6B,QAAQ,cAA5C,oBAGA,qBAAKjF,UAAU,WAAf,SACE,uBACED,KAAK,OACLoF,UAAU,UACVC,QAAQ,sCACRpF,UAAWsD,EACXa,MAAOrF,EACPoG,SAAUZ,GAAa,UACvB1F,GAAG,cACH,mBAAiB,aACjByG,YAAY,sCAIlB,sBAAKrF,UAAU,iBAAf,UACE,uBAAOA,UAAW4D,GAAoBqB,QAAQ,iBAA9C,sBAGA,qBAAKjF,UAAU,WAAf,SACE,yBACEA,UAAW8D,GACXK,MAAOpF,EACPmG,SAAUZ,GAAa,YAHzB,UAKE,wBAAQH,MAAM,GAAd,uBACCH,WAIP,sBAAKhE,UAAU,iBAAf,UACE,uBAAOA,UAAWwD,EAAgByB,QAAQ,YAA1C,kBAGA,qBAAKjF,UAAU,WAAf,SACE,uBACED,KAAK,OACLoE,MAAOnF,EACPkG,SAAUZ,GAAa,QACvBtE,UAAW0D,EACX9E,GAAG,YACH,mBAAiB,WACjByG,YAAY,qBAKlB,qBAAKrF,UAAU,wCAAf,SACE,wBAAQD,KAAK,SAASC,UAAU,kBAAhC,0BClIOsF,EA7FD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACf,EAAgCpG,mBAAS,IAAzC,mBAAOqG,EAAP,KAAiBC,EAAjB,KACMC,EAAoB,IAAIC,IAC5B,kCAAkCC,MAAM,KAEpCC,EAAiB,IAAIF,IAAI,6BAA6BC,MAAM,KAC5DE,EAAU,IAAIH,IAAI,aAAaC,MAAM,KACrCG,EAASC,EAAQ,KAwDvB,OACE,qBAAKhG,UAAU,YAAf,SACE,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOiF,QAAQ,wBAAf,iCACA,uBACElF,KAAK,WACLC,UAAU,eACVpB,GAAG,wBACHyG,YAAY,WACZlB,MAAOqB,EACPN,SAfW,SAACV,GACpBiB,EAAYjB,EAAEC,OAAON,UAgBf,uBAAOvF,GAAG,eAAeoB,UAAU,uBAAnC,oHAKF,wBACED,KAAK,SACLF,QA1EkB,WACxB,GAAI2F,EAAS7D,OAAS,GACpB7B,MAAM,0BACD,CAIL,IAHA,IAAImG,EAAW,EACXC,EAAW,EACXC,EAAO,EACFvE,EAAI,EAAGA,EAAI4D,EAAS7D,OAAQC,IAC/B8D,EAAkBU,IAAIZ,EAASa,OAAOzE,IACxCqE,GAAY,EACHJ,EAAeO,IAAIZ,EAASa,OAAOzE,IAC5CsE,GAAY,EACHJ,EAAQM,IAAIZ,EAASa,OAAOzE,MACrCuE,GAAQ,GAMZ,GAAIF,EAAW,EACbnG,MAAM,gDACD,GAAIoG,EAAW,EACpBpG,MAAM,gDACD,GAAIqG,EAAO,EAChBrG,MAAM,oCACD,CAML,GAAcwG,qIAHHP,EAAOQ,WAAW,SADhB,eAEIC,OAAOhB,GAAUiB,OAAO,OAEe,CAGtD,IAAIC,EAAcX,EAAOY,eAAe,cAAenB,GACjDoB,EAAoBnH,OACxB6G,oEAEEO,EAAUH,EAAYF,OAAOI,EAAmB,MAAO,QAC3DC,GAAWH,EAAYI,MAAM,QAC7BC,aAAaC,QAAQ,SAAUH,GAC/BtB,EAAUsB,QAEV/G,MAAM,aACN2F,EAAY,OA+BZzF,UAAU,kBAHZ,yBC7EJiH,EAAWjB,EAAQ,KACnBkB,EAAO,KA4PIC,MA1Pf,WACE,MAA4BhI,mBACQ,MAAlC4H,aAAaK,QAAQ,UAAoB,GAAKL,aAAaK,QAAQ,WADrE,mBAAOC,EAAP,KAAe9B,EAAf,KAGA,EAAgCpG,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBiH,EAAjB,KACA,EAAoCnI,mBAAS,IAA7C,mBAAO+C,EAAP,KAAmBqF,EAAnB,KACA,EAAwCpI,oBAAS,GAAjD,mBAAOmB,EAAP,KAAqBkH,EAArB,KANa,SA6BEC,IA7BF,2EA6Bb,4BAAAC,EAAA,sDACMC,EAAe,GACnBT,EAAK,gBACFU,OAAO,CACNC,KAAM,cAEPC,UACC,SAAcC,EAASC,GAGrBD,EAAQlG,SAAQ,SAAUoG,GAExBA,EAAOC,OAAP,YAA+BD,EAAOrJ,GACtC+I,EAAaQ,KAAKF,EAAOC,WAM3BF,OAEF,SAAcI,GACRA,EACFC,QAAQC,MAAMF,GAGdd,EAAYK,MA1BtB,4CA7Ba,kEA8Db,4BAAAD,EAAA,sDACMC,EAAe,GACnBT,EAAK,oBACFU,OAAO,CACNC,KAAM,YACNK,OAAQ,CAAC,OAAQ,YAElBJ,UACC,SAAcC,EAASC,GAGrBD,EAAQlG,SAAQ,SAAUoG,GACxBN,EAAaQ,KAAKF,EAAOC,WAM3BF,OAEF,SAAcI,GACRA,EACFC,QAAQC,MAAMF,GAGdb,EAAcI,MAzBxB,4CA9Da,kEA6Fb,WAAgD9G,GAAhD,SAAA6G,EAAA,sDAEER,EAAK,gBAAgBqB,QACnB,CAAC,GAAD,OAAI1H,KACJ,SAAUuH,EAAKI,GACTJ,EACFC,QAAQC,MAAMF,GAGhBX,OATN,4CA7Fa,kEA4Gb,WAAgD7G,GAAhD,SAAA8G,EAAA,sDACER,EAAK,gBAAgBuB,OAAO,CAAC,CAAEP,OAAQtH,KAAY,SAAUwH,EAAKL,GAC5DK,EACFtI,MAAM,qCAAD,OAAsCc,EAAtC,MAGPmH,EAAQlG,SAAQ,SAAUoG,UAN9B,4CA5Ga,sBAsHbS,qBAAU,WACJrB,IACFH,EAAO,IAAID,EAAS,CAAEI,OAAQA,IAAUH,KAAK,qBAC7CO,IAzHS,mCA0HTkB,MAED,CAACtB,IAGJ,IAAIuB,EAAsB,CAAEC,YAAa,EAAGC,aAAc,GAC1DzI,EAASwB,SAAQ,SAACjB,GAChBgI,EAAoBC,aAAejI,EAAQ9B,OACvC8J,EAAoBG,eAAenI,EAAQ7B,UAC7C6J,EAAoBhI,EAAQ7B,WAAa6B,EAAQ9B,OAEjD8J,EAAoBhI,EAAQ7B,UAAY6B,EAAQ9B,UAKpD,IAAIkK,EAA2B,GAC/B9G,EAAWL,SAAQ,SAAC9C,EAAUoB,GAC5B6I,EAAyBjK,EAASkF,MAAQ9D,EAC1CyI,EAAoBE,cAAgB/J,EAASD,UAK/C,IAAIqD,EAA4B,GAChCD,EAAWL,SAAQ,SAAC9C,EAAUoB,GAE5B,GAAIyI,EAAoBG,eAAehK,EAASkF,MAAO,CACrD,IAAIgF,EAAclK,EAASD,OAAS8J,EAAoB7J,EAASkF,MACjE9B,EAA0BpD,EAASkF,MAClB,MAAfgF,EAAsBA,EAAc,OAKtC9G,EAA0BpD,EAASkF,MAAQlF,EAASD,UAKxD,IAAIsD,EAAQ,IAAI7C,KACZ2J,EAAO,IAAI3J,KAAK6C,EAAM+G,WAC1BD,EAAKE,SAAShH,EAAM1C,WAAa,GACjCwJ,EAAK1G,QAAQ,GACb,IAAI6G,EACFH,EAAKI,UAAYlH,EAAMkH,UAAYJ,EAAKI,UAAYlH,EAAMkH,UAAY,EACpEC,EAAgBnH,EAAMkH,UAAYD,EAClChI,EAA6Be,EAAMkH,UAAYC,EAC/CC,EACFZ,EAAoBE,aAAezH,EACnCuH,EAAoBC,YAEtB,OACE,mCACIxB,EAGA,sBAAKrH,UAAU,kCAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,kBAAd,yCACA,uBAAOA,UAAU,aAAjB,SACE,uBAAMA,UAAWwJ,EAAgB,EAAI,YAAc,WAAnD,6BACkB,kCAAKA,EAAc5J,QAAQ,WAG/C,qBAAKI,UAAU,yCAAf,SACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACEiC,WAlLG,SAACrB,GAEhBA,EAAQmI,eAAe,SACvBnI,EAAQmI,eAAe,WACvBnI,EAAQmI,eAAe,aACvBnI,EAAQmI,eAAe,SAGvBzB,EAAY,CAAC1G,GAAF,mBAAcP,KApBhB,oCAqBToJ,CAAiC7I,IAEjCd,MACE,mHAuKUoC,WAAYA,EACZC,0BAA2BA,WAKnC,uBAEA,sBAAKnC,UAAU,mBAAf,UACE,4CACA,qBAAKA,UAAU,yCAAf,SACGkC,EAAWjC,KAAI,SAAClB,EAAUoB,GAEzB,OACE,cAAC,EAAD,CAEEpB,SAAUA,EAASkF,KACnBlD,cAAehC,EAASD,OACxBkC,iBAAkBmB,EAA0BpD,EAASkF,MACrDhD,sBAAuBZ,EAASqJ,QAC9B,SAAC9I,GAAD,OAAaA,EAAQ7B,WAAaA,EAASkF,QAE7C5C,2BAA4BA,GAPvBlB,WAaf,uBAEA,sBAAKH,UAAU,GAAf,UACE,sBAAKH,QAtNO,WACpB2H,GAAiBlH,IAqNoBI,MAAO,CAAEiJ,OAAQ,WAA9C,UACE,4CAAerJ,EAAe,SAAM,SAApC,OACA,uBAAON,UAAU,OAAjB,SACE,uBACEA,UACE4I,EAAoBC,YACpBD,EAAoBE,aAChB,WACA,YALR,qBAQU,4BAAIF,EAAoBC,YAAYjJ,QAAQ,KARtD,QASIgJ,EAAoBE,qBAI5B,cAAC,EAAD,CACEzI,SAAUA,EACVC,aAAcA,EACdpB,kBAjPC,oDAiLP,cAAC,EAAD,CAAOqG,UAAWA,OC9KXqE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a13b079a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst ExpenseRow = ({\r\n  id,\r\n  date,\r\n  amount,\r\n  category,\r\n  note,\r\n  airtableId,\r\n  removeTransaction,\r\n}) => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const date_obj = new Date(date);\r\n  const day_month_date =\r\n    String(date_obj.getMonth() + 1) + \"/\" + String(date_obj.getUTCDate());\r\n  const items = [day_month_date, amount.toFixed(2), category, note];\r\n\r\n  if (showAlert) {\r\n    return (\r\n      <tr>\r\n        <td>{items[0]}</td>\r\n        <td>{items[1]}</td>\r\n        <td>delete?</td>\r\n        <td>\r\n          <button\r\n            onClick={() => {\r\n              if (airtableId == null) {\r\n                alert(\"Refresh and try again\");\r\n              } else {\r\n                removeTransaction(airtableId);\r\n                setShowAlert(false);\r\n              }\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n          >\r\n            delete\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button\r\n            onClick={() => {\r\n              setShowAlert(false);\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n          >\r\n            cancel\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  } else {\r\n    return (\r\n      <tr id={id}>\r\n        {items.map((item, idx) => (\r\n          <td key={idx}>{item}</td>\r\n        ))}\r\n        <td\r\n          onClick={() => {\r\n            setShowAlert(true);\r\n          }}\r\n        >\r\n          <button type=\"button\" className=\"btn btn-secondary\">\r\n            X\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ExpenseRow;\r\n","import ExpenseRow from \"./expense_row\";\r\n\r\nconst ExpenseTable = ({ expenses, tableVisible, removeTransaction }) => {\r\n  let visibilityStyle = {\r\n    visibility: tableVisible != null && !tableVisible ? \"hidden\" : \"visible\",\r\n    overflow: \"scroll\",\r\n  };\r\n  return (\r\n    <table\r\n      style={visibilityStyle}\r\n      className=\"table table-striped table-dark table-hover align-left table-condensed\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Amount</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Note</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {expenses.map((expense, idx) => (\r\n          <ExpenseRow\r\n            id={idx}\r\n            key={idx}\r\n            date={expense.date}\r\n            amount={expense.amount}\r\n            category={expense.category}\r\n            note={expense.note}\r\n            airtableId={expense.airtable_id}\r\n            removeTransaction={removeTransaction}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ExpenseTable;\r\n","const BudgetCard = ({\r\n  category,\r\n  budget_amount,\r\n  amount_remaining,\r\n  category_transactions,\r\n  percentage_month_completed,\r\n}) => {\r\n  // amount_remaining is what the actual left on the budget\r\n  // budget_amount and amount_remaining may be passed in as undefined\r\n  budget_amount = budget_amount != null ? budget_amount : 0;\r\n  amount_remaining =\r\n    amount_remaining != null ? amount_remaining : budget_amount;\r\n\r\n  let left_to_spend = amount_remaining > 0 ? amount_remaining : 0;\r\n  let spent = budget_amount - amount_remaining;\r\n  let aggregate_budget = percentage_month_completed * budget_amount;\r\n\r\n  let card_style_class = \"card card-block h-100 rounded\";\r\n  // setting message for card color\r\n  let message = `  |  ${Math.round((spent * 100) / budget_amount)}% Usage`;\r\n\r\n  if (budget_amount === 0) {\r\n    // Strange empty budget card, but just handling case\r\n    card_style_class += \"text-white bg-secondary\";\r\n    message = \"Error Card\";\r\n  } else if (spent < 0) {\r\n    // refund on a category that has $0 budget\r\n    card_style_class += \" text-white bg-info\";\r\n    message = \" | Reason: Refund?\";\r\n  } else if (spent / budget_amount > 1) {\r\n    // 100 % usage\r\n    card_style_class += \" text-white budget-past-100-percent\";\r\n  } else if (spent >= aggregate_budget) {\r\n    // passing budget amount according to time of month\r\n    card_style_class += \" text-white budget-between-50-100\";\r\n  } else {\r\n    card_style_class += \" text-white budget-below-50\";\r\n  }\r\n\r\n  const showModal = () => {\r\n    let s = `Transaction${\r\n      category_transactions.length > 1 ? \"s\" : \"\"\r\n    } for ${category}`;\r\n    s += \"\\n\";\r\n\r\n    // arbitrary magic number 32 to stop text wrap on iphone\r\n    for (let i = 0; i < 32; i++) {\r\n      s += \"_\";\r\n    }\r\n    s += \"\\n\\n\";\r\n    category_transactions.forEach((trans) => {\r\n      const date_obj = new Date(trans.date);\r\n      const day_month_date =\r\n        String(date_obj.getMonth() + 1) + \"/\" + String(date_obj.getUTCDate());\r\n      s += `${day_month_date} - $${trans.amount} - ${trans.note}\\n`;\r\n    });\r\n\r\n    if (category_transactions.length === 0) {\r\n      s = `No transaction for ${category} this month.`;\r\n    }\r\n    alert(s);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"col-8 col-md-4 col-no-padding\">\r\n        <div className={card_style_class} onClick={showModal}>\r\n          <h5 className=\"card-title pt-3\">{category}</h5>\r\n          <div className=\"card-body text-left\">\r\n            <p className=\"card-subtitle mb-2\">\r\n              Remaining: ${left_to_spend.toFixed(2)}\r\n            </p>\r\n            <h6 className=\"card-text\">Budget: ${budget_amount}</h6>\r\n            <h6 className=\"card-text\">\r\n              Today's Budget: ${(aggregate_budget - spent).toFixed(2)}\r\n            </h6>\r\n            <h6 className=\"card-text\">\r\n              Spent: {spent.toFixed(2)} {message ? `${message}` : \"\"}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetCard;\r\n","import { useState } from \"react\";\r\n\r\nconst EnterExpense = ({\r\n  addExpense,\r\n  categories,\r\n  category_amount_remaining,\r\n}) => {\r\n  var today = new Date().toISOString();\r\n  today = today.slice(0, today.indexOf(\"T\"));\r\n  const [date, setDate] = useState(today);\r\n  const [note, setNote] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const goodLabelStyle = \"col-sm-4 col-form-label text-white\";\r\n  const badLabelStyle = \"text-danger col-sm-4 col-form-label text-white\";\r\n  const goodInputStyle = \"form-control\";\r\n  const badInputStyle = \"form-control is-invalid\";\r\n\r\n  const [dateLabelStyle, setDateLabelStyle] = useState(goodLabelStyle);\r\n  const [dateInputStyle, setDateInputStyle] = useState(goodInputStyle);\r\n  const [amountLabelStyle, setAmountLabelStyle] = useState(goodLabelStyle);\r\n  const [amountInputStyle, setAmountInputStyle] = useState(goodInputStyle);\r\n  const [noteLabelStyle, setNoteLabelStyle] = useState(goodLabelStyle);\r\n  const [noteInputStyle, setNoteInputStyle] = useState(goodInputStyle);\r\n  const [categoryLabelStyle, setCategoryLabelStyle] = useState(goodLabelStyle);\r\n  const [categorySelectStyle, setCategorySelectStyle] =\r\n    useState(goodInputStyle);\r\n\r\n  let categoriesOptions =\r\n    categories.length > 0 &&\r\n    categories.map((item, i) => {\r\n      let left_to_spend = \"\";\r\n      if (\r\n        category_amount_remaining[item.name] != null &&\r\n        category_amount_remaining[item.name] > 0\r\n      ) {\r\n        left_to_spend =\r\n          \"$\" + String(Math.round(category_amount_remaining[item.name]));\r\n        left_to_spend = left_to_spend.padEnd(5) + \"- \";\r\n      } else {\r\n        left_to_spend = \"$0\".padEnd(5) + \"- \";\r\n      }\r\n      return (\r\n        <option key={i} value={item.name}>\r\n          {left_to_spend}\r\n          {item.name}\r\n        </option>\r\n      );\r\n    }, this);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let okay = true;\r\n    // setting amount label and input to okay or error\r\n    if (amount === \"\" || amount === 0) {\r\n      setAmountLabelStyle(badLabelStyle);\r\n      setAmountInputStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setAmountLabelStyle(goodLabelStyle);\r\n      setAmountInputStyle(goodInputStyle);\r\n    }\r\n    // setting note label and input to okay or error\r\n    if (note === \"\") {\r\n      setNoteLabelStyle(badLabelStyle);\r\n      setNoteInputStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setNoteLabelStyle(goodLabelStyle);\r\n      setNoteInputStyle(goodInputStyle);\r\n    }\r\n    // setting category label and input to okay or error\r\n    if (category === \"\") {\r\n      setCategoryLabelStyle(badLabelStyle);\r\n      setCategorySelectStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setCategoryLabelStyle(goodLabelStyle);\r\n      setCategorySelectStyle(goodInputStyle);\r\n    }\r\n    // setting date label and input to okay or error\r\n    if (date === \"\") {\r\n      setDateLabelStyle(badLabelStyle);\r\n      setDateInputStyle(badInputStyle);\r\n      okay = false;\r\n    } else {\r\n      setDateLabelStyle(goodLabelStyle);\r\n      setDateInputStyle(goodInputStyle);\r\n    }\r\n\r\n    if (okay) {\r\n      try {\r\n        var today = new Date().toISOString();\r\n        today = today.slice(0, today.indexOf(\"T\"));\r\n        let float_amount = Number(amount);\r\n        addExpense({\r\n          date: date,\r\n          amount: float_amount,\r\n          category: category,\r\n          note: note,\r\n        });\r\n        setDate(today);\r\n        setNote(\"\");\r\n        setCategory(\"\");\r\n        setAmount(\"\");\r\n      } catch (e) {\r\n        alert(\"Bad number conversion of amount to Number type\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // decimal number positive or negative\r\n  let decimal_re = new RegExp(\"^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$\");\r\n\r\n  const handleChange = (data) => (e) => {\r\n    switch (data) {\r\n      case \"amount\":\r\n        let target = e.target.value;\r\n        debugger;\r\n        // shortcut on iphone decimal keypad to allow for negatives\r\n        if (target.startsWith(\"..\")) {\r\n          target = \"-\" + target.slice(2);\r\n        }\r\n\r\n        if (\r\n          decimal_re.test(target) ||\r\n          target === \".\" ||\r\n          target === \"-\" ||\r\n          target === \"\" ||\r\n          target === \"-.\"\r\n        ) {\r\n          setAmount(target);\r\n        } else {\r\n          alert(\"Invalid number\");\r\n        }\r\n        break;\r\n      case \"category\":\r\n        setCategory(e.target.value);\r\n        break;\r\n      case \"note\":\r\n        setNote(e.target.value);\r\n        break;\r\n      case \"date\":\r\n        var today = new Date().toISOString();\r\n        today = today.slice(0, today.indexOf(\"T\"));\r\n        if (e.target.value > today + 1) {\r\n          alert(\"Cannot have an expense in the future. 1 Day ahead is okay.\");\r\n          setDate(today);\r\n          return;\r\n        }\r\n        setDate(e.target.value);\r\n        break;\r\n      default:\r\n        alert(`An unknown data: ${data} was passed into the switch statement.`);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"px-4\">\r\n      <div className=\"form-group row\">\r\n        <label className={dateLabelStyle} htmlFor=\"dateinput\">\r\n          Date\r\n        </label>\r\n        <div className=\"col-sm-8\">\r\n          <input\r\n            type=\"date\"\r\n            className={dateInputStyle}\r\n            value={date}\r\n            onChange={handleChange(\"date\")}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label className={amountLabelStyle} htmlFor=\"amountinput\">\r\n          Amount\r\n        </label>\r\n        <div className=\"col-sm-8\">\r\n          <input\r\n            type=\"text\"\r\n            inputmode=\"decimal\"\r\n            pattern=\"[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)\"\r\n            className={amountInputStyle}\r\n            value={amount}\r\n            onChange={handleChange(\"amount\")}\r\n            id=\"amountinput\"\r\n            aria-describedby=\"amountHelp\"\r\n            placeholder=\"Amount (Use .. for negative)\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label className={categoryLabelStyle} htmlFor=\"categorySelect\">\r\n          Category\r\n        </label>\r\n        <div className=\"col-sm-8\">\r\n          <select\r\n            className={categorySelectStyle}\r\n            value={category}\r\n            onChange={handleChange(\"category\")}\r\n          >\r\n            <option value=\"\">Choose...</option>\r\n            {categoriesOptions}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label className={noteLabelStyle} htmlFor=\"noteInput\">\r\n          Note\r\n        </label>\r\n        <div className=\"col-sm-8\">\r\n          <input\r\n            type=\"text\"\r\n            value={note}\r\n            onChange={handleChange(\"note\")}\r\n            className={noteInputStyle}\r\n            id=\"noteInput\"\r\n            aria-describedby=\"noteHelp\"\r\n            placeholder=\"Description\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row justify-content-center\">\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EnterExpense;\r\n","import { useState } from \"react\";\r\n\r\nconst Login = ({ setApiKey }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const specialCharacters = new Set(\r\n    \"~`!@#$%^&*()-_=+{[}}\\\\|:;<,>.?/\".split(\"\")\r\n  );\r\n  const capitalLetters = new Set(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"));\r\n  const numbers = new Set(\"0123456789\".split(\"\"));\r\n  const crypto = require(\"crypto\");\r\n\r\n  const performValidation = () => {\r\n    if (password.length < 18) {\r\n      alert(\"Password too short\");\r\n    } else {\r\n      let specials = 0;\r\n      let capitals = 0;\r\n      let nums = 0;\r\n      for (let i = 0; i < password.length; i++) {\r\n        if (specialCharacters.has(password.charAt(i))) {\r\n          specials += 1;\r\n        } else if (capitalLetters.has(password.charAt(i))) {\r\n          capitals += 1;\r\n        } else if (numbers.has(password.charAt(i))) {\r\n          nums += 1;\r\n        } else {\r\n          // normal character\r\n        }\r\n      }\r\n\r\n      if (specials < 3) {\r\n        alert(\"Must have at least 4 special characters\");\r\n      } else if (capitals < 3) {\r\n        alert(\"Must have at least 4 capital characters\");\r\n      } else if (nums < 3) {\r\n        alert(\"Must have at least 4 numbers\");\r\n      } else {\r\n        // okay\r\n        const salt = \"saltySnail%\";\r\n        var hash = crypto.createHmac(\"sha512\", salt);\r\n        let value = hash.update(password).digest(\"hex\");\r\n\r\n        if (value === process.env.REACT_APP_PASSWORD_SALT_HASH) {\r\n          // decrypt the api keys with only password\r\n\r\n          var decipherkey = crypto.createDecipher(\"aes-128-cbc\", password);\r\n          const encrypted_api_key = String(\r\n            process.env.REACT_APP_ENCRYPTED_API_KEY\r\n          );\r\n          var api_key = decipherkey.update(encrypted_api_key, \"hex\", \"utf8\");\r\n          api_key += decipherkey.final(\"utf8\");\r\n          localStorage.setItem(\"apiKey\", api_key);\r\n          setApiKey(api_key);\r\n        } else {\r\n          alert(\"Incorrect\");\r\n          setPassword(\"\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword1\">Decryption Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n          <small id=\"passwordHelp\" className=\"form-text text-muted\">\r\n            Password must be 18 characters with atleast 3 special characters, 3\r\n            capital letters, and 3 numbers.\r\n          </small>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={performValidation}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Enter\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"./App.css\";\r\nimport ExpenseTable from \"./components/expense_table\";\r\nimport BudgetCard from \"./components/budget_card\";\r\nimport EnterExpense from \"./components/enter_expense\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Login from \"./components/login\";\r\nvar Airtable = require(\"airtable\");\r\nvar base = null;\r\n\r\nfunction App() {\r\n  const [apiKey, setApiKey] = useState(\r\n    localStorage.getItem(\"apiKey\") == null ? \"\" : localStorage.getItem(\"apiKey\")\r\n  );\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [tableVisible, setTableVisible] = useState(true);\r\n\r\n  const changeVisible = () => {\r\n    setTableVisible(!tableVisible);\r\n  };\r\n\r\n  const addExpense = (expense) => {\r\n    if (\r\n      expense.hasOwnProperty(\"date\") &&\r\n      expense.hasOwnProperty(\"amount\") &&\r\n      expense.hasOwnProperty(\"category\") &&\r\n      expense.hasOwnProperty(\"note\")\r\n    ) {\r\n      // the setExpenses triggers rerender and will fetch the new data from airTable.\r\n      setExpenses([expense, ...expenses]);\r\n      post_new_transaction_to_airtable(expense);\r\n    } else {\r\n      alert(\r\n        \"The expense object made did not have the following props: date, amount, category, note. \\n Failed to set state\"\r\n      );\r\n    }\r\n  };\r\n\r\n  async function get_transactions_from_airtable() {\r\n    let list_records = [];\r\n    base(\"Transactions\")\r\n      .select({\r\n        view: \"Grid view\",\r\n      })\r\n      .eachPage(\r\n        function page(records, fetchNextPage) {\r\n          // This function (`page`) will get called for each page of records.\r\n\r\n          records.forEach(function (record) {\r\n            // adding airtable id to be able to remove\r\n            record.fields[\"airtable_id\"] = record.id;\r\n            list_records.push(record.fields);\r\n          });\r\n\r\n          // To fetch the next page of records, call `fetchNextPage`.\r\n          // If there are more records, `page` will get called again.\r\n          // If there are no more records, `done` will get called.\r\n          fetchNextPage();\r\n        },\r\n        function done(err) {\r\n          if (err) {\r\n            console.error(err);\r\n            return;\r\n          } else {\r\n            setExpenses(list_records);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  // gets the budget categories from airtable\r\n  async function get_categories_from_airtable() {\r\n    let list_records = [];\r\n    base(\"Category_Budgets\")\r\n      .select({\r\n        view: \"Grid view\",\r\n        fields: [\"name\", \"amount\"],\r\n      })\r\n      .eachPage(\r\n        function page(records, fetchNextPage) {\r\n          // This function (`page`) will get called for each page of records.\r\n\r\n          records.forEach(function (record) {\r\n            list_records.push(record.fields);\r\n          });\r\n\r\n          // To fetch the next page of records, call `fetchNextPage`.\r\n          // If there are more records, `page` will get called again.\r\n          // If there are no more records, `done` will get called.\r\n          fetchNextPage();\r\n        },\r\n        function done(err) {\r\n          if (err) {\r\n            console.error(err);\r\n            return;\r\n          } else {\r\n            setCategories(list_records);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  async function remove_transaction_from_airtable(airtable_id) {\r\n    debugger;\r\n    base(\"Transactions\").destroy(\r\n      [`${airtable_id}`],\r\n      function (err, deletedRecords) {\r\n        if (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n        get_transactions_from_airtable();\r\n      }\r\n    );\r\n  }\r\n\r\n  // creates new transaction to airtable\r\n  async function post_new_transaction_to_airtable(expense) {\r\n    base(\"Transactions\").create([{ fields: expense }], function (err, records) {\r\n      if (err) {\r\n        alert(`Error posting Expense to Airtable ${expense}.`);\r\n        return;\r\n      }\r\n      records.forEach(function (record) {});\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (apiKey) {\r\n      base = new Airtable({ apiKey: apiKey }).base(\"app5VP16VBp5NgMg5\");\r\n      get_transactions_from_airtable();\r\n      get_categories_from_airtable();\r\n    }\r\n  }, [apiKey]);\r\n\r\n  // calculating the actual amounts spend by iterating over the expense transactions\r\n  let actual_budget_spent = { total_spent: 0, total_budget: 0 };\r\n  expenses.forEach((expense) => {\r\n    actual_budget_spent.total_spent += expense.amount;\r\n    if (actual_budget_spent.hasOwnProperty(expense.category)) {\r\n      actual_budget_spent[expense.category] += expense.amount;\r\n    } else {\r\n      actual_budget_spent[expense.category] = expense.amount;\r\n    }\r\n  });\r\n\r\n  // creating a look up dictionary between the name and index spot in categories\r\n  let name_index_category_dict = {};\r\n  categories.forEach((category, idx) => {\r\n    name_index_category_dict[category.name] = idx;\r\n    actual_budget_spent.total_budget += category.amount;\r\n  });\r\n\r\n  // calculating the current amount spent and amount left to spend from categories and transactions info\r\n  // can be less than zero, each component that uses the data can decide if it wants to turn negatives to $0\r\n  let category_amount_remaining = {};\r\n  categories.forEach((category, idx) => {\r\n    // data from the 2 async fetchs might take a big\r\n    if (actual_budget_spent.hasOwnProperty(category.name)) {\r\n      let amount_left = category.amount - actual_budget_spent[category.name];\r\n      category_amount_remaining[category.name] =\r\n        amount_left != null ? amount_left : 0;\r\n\r\n      // if actual_budget_spent has gotten its data from fetch\r\n      // but nothing has been spent in that category\r\n    } else {\r\n      category_amount_remaining[category.name] = category.amount;\r\n    }\r\n  });\r\n\r\n  // calculating what you have to spend today.\r\n  let today = new Date();\r\n  let time = new Date(today.getTime());\r\n  time.setMonth(today.getMonth() + 1);\r\n  time.setDate(0);\r\n  let days =\r\n    time.getDate() > today.getDate() ? time.getDate() - today.getDate() : 0;\r\n  let days_in_month = today.getDate() + days;\r\n  let percentage_month_completed = today.getDate() / days_in_month;\r\n  let todays_budget =\r\n    actual_budget_spent.total_budget * percentage_month_completed -\r\n    actual_budget_spent.total_spent;\r\n\r\n  return (\r\n    <>\r\n      {!apiKey ? (\r\n        <Login setApiKey={setApiKey} />\r\n      ) : (\r\n        <div className=\"container-fluid p-2 text-center\">\r\n          <div className=\"form-div enter-expense-gradient\">\r\n            <h1 className=\"text-white pt-3\">Budget Tracker 💸</h1>\r\n            <small className=\"text-light\">\r\n              <mark className={todays_budget > 0 ? \"mark-good\" : \"mark-bad\"}>\r\n                Today's Budget: <b>${todays_budget.toFixed(2)}</b>\r\n              </mark>\r\n            </small>\r\n            <div className=\"row d-flex justify-content-center mt-2\">\r\n              <div className=\"col-md-6\">\r\n                <EnterExpense\r\n                  addExpense={addExpense}\r\n                  categories={categories}\r\n                  category_amount_remaining={category_amount_remaining}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <div className=\"container-fluid \">\r\n            <h2>Categories</h2>\r\n            <div className=\"row flex-row flex-nowrap overflow-auto\">\r\n              {categories.map((category, idx) => {\r\n                // to keep the meta data in actual_budget_spent from being made into a category card\r\n                return (\r\n                  <BudgetCard\r\n                    key={idx}\r\n                    category={category.name}\r\n                    budget_amount={category.amount}\r\n                    amount_remaining={category_amount_remaining[category.name]}\r\n                    category_transactions={expenses.filter(\r\n                      (expense) => expense.category === category.name\r\n                    )}\r\n                    percentage_month_completed={percentage_month_completed}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <div className=\"\">\r\n            <div onClick={changeVisible} style={{ cursor: \"pointer\" }}>\r\n              <h2> Expenses {tableVisible ? \"˄\" : \"˅\"} </h2>\r\n              <small className=\"mb-2\">\r\n                <mark\r\n                  className={\r\n                    actual_budget_spent.total_spent >\r\n                    actual_budget_spent.total_budget\r\n                      ? \"mark-bad\"\r\n                      : \"mark-good\"\r\n                  }\r\n                >\r\n                  Spent $ <b>{actual_budget_spent.total_spent.toFixed(2)}</b> of\r\n                  ${actual_budget_spent.total_budget}\r\n                </mark>\r\n              </small>\r\n            </div>\r\n            <ExpenseTable\r\n              expenses={expenses}\r\n              tableVisible={tableVisible}\r\n              removeTransaction={remove_transaction_from_airtable}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}